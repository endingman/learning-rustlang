{"config":{"output_file":null,"full_docs":false,"pub_only":false,"reachable_only":false,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use","program":"C:\\Users\\Manman M Liu\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":[],"output":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\target\\rls\\debug\\deps\\libmod_pub_use-cc02b97bd0cc4d12.rmeta"},"prelude":{"crate_id":{"name":"mod_pub_use","disambiguator":[1140135355567089134,0]},"crate_root":"src","external_crates":[{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":1,"id":{"name":"std","disambiguator":[7379719041391505039,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":2,"id":{"name":"core","disambiguator":[5226548339696486402,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15782588708828798436,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11258588358156983047,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":5,"id":{"name":"alloc","disambiguator":[6811839233127289238,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":6,"id":{"name":"libc","disambiguator":[6798478037195512723,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":7,"id":{"name":"unwind","disambiguator":[12572258325454906649,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":8,"id":{"name":"cfg_if","disambiguator":[598470195457823820,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7285820039251336650,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15004074270013699283,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":11,"id":{"name":"std_detect","disambiguator":[6568562326383462027,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[7532148157145861684,0]}},{"file_name":"c:\\code\\rustCode\\learning-rust\\chapter_07\\mod_pub_use\\src\\main.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[15660406440960571571,0]}}],"span":{"file_name":"src\\main.rs","byte_start":0,"byte_end":1483,"line_start":1,"line_end":45,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4},"span":{"file_name":"src\\main.rs","byte_start":571,"byte_end":581,"line_start":14,"line_end":14,"column_start":27,"column_end":37},"alias_span":null,"name":"instrument","value":"","parent":{"krate":0,"index":6}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"src\\main.rs","byte_start":0,"byte_end":1483,"line_start":1,"line_end":45,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"src\\main.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":11}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3},"span":{"file_name":"src\\main.rs","byte_start":4,"byte_end":9,"line_start":1,"line_end":1,"column_start":5,"column_end":10},"name":"sound","qualname":"::sound","value":"src\\main.rs","parent":null,"children":[{"krate":0,"index":4}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":4},"span":{"file_name":"src\\main.rs","byte_start":24,"byte_end":34,"line_start":2,"line_end":2,"column_start":13,"column_end":23},"name":"instrument","qualname":"::sound::instrument","value":"src\\main.rs","parent":null,"children":[{"krate":0,"index":5}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5},"span":{"file_name":"src\\main.rs","byte_start":52,"byte_end":60,"line_start":3,"line_end":3,"column_start":16,"column_end":24},"name":"clarinet","qualname":"::sound::instrument::clarinet","value":"pub fn clarinet()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"src\\main.rs","byte_start":525,"byte_end":542,"line_start":13,"line_end":13,"column_start":5,"column_end":22},"name":"performance_group","qualname":"::performance_group","value":"src\\main.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":10}],"decl_id":null,"docs":" 当使用 use 关键字将名称导入作用域时，在新作用域中可用的名称是私有的。\n 如果希望调用你编写的代码的代码能够像你一样在其自己的作用域内引用这些类型，可以结合 pub 和 use。\n 这个技术被称为 「重导出」（re-exporting），因为这样做将项引入作用域并同时使其可供其他代码引入自己的作用域。","sig":null,"attributes":[{"value":"*\n * 当使用 use 关键字将名称导入作用域时，在新作用域中可用的名称是私有的。\n * 如果希望调用你编写的代码的代码能够像你一样在其自己的作用域内引用这些类型，可以结合 pub 和 use。\n * 这个技术被称为 「重导出」（re-exporting），因为这样做将项引入作用域并同时使其可供其他代码引入自己的作用域。\n */","span":{"file_name":"src\\main.rs","byte_start":108,"byte_end":520,"line_start":8,"line_end":12,"column_start":1,"column_end":4}}]},{"kind":"Function","id":{"krate":0,"index":10},"span":{"file_name":"src\\main.rs","byte_start":595,"byte_end":608,"line_start":16,"line_end":16,"column_start":12,"column_end":25},"name":"clarinet_trio","qualname":"::performance_group::clarinet_trio","value":"pub fn clarinet_trio()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":11},"span":{"file_name":"src\\main.rs","byte_start":1386,"byte_end":1390,"line_start":42,"line_end":42,"column_start":4,"column_end":8},"name":"main","qualname":"::main","value":"fn main()","parent":null,"children":[],"decl_id":null,"docs":"通过 glob 运算符将所有的公有定义引入作用域\n如果希望将一个路径下 所有 公有项引入作用域，可以指定路径后跟 *，glob 运算符：\nuse std::collections::*;\n 使用外部包：\n为了在项目中使用 rand，在 Cargo.toml 中加入了如下行：\n文件名: Cargo.toml\n[dependencies]\nrand = \"0.5.5\"\n \n注意标准库（std）对于你的包来说也是外部 crate。\n因为标准库随 Rust 语言一同分发，无需修改 Cargo.toml 来引入 std，\n不过需要通过 use 将标准库中定义的项引入项目包的作用域中来引用它们，比如 HashMap：\nuse std::collections::HashMap;\n","sig":null,"attributes":[{"value":"*\n通过 glob 运算符将所有的公有定义引入作用域\n如果希望将一个路径下 所有 公有项引入作用域，可以指定路径后跟 *，glob 运算符：\nuse std::collections::*;\n*/","span":{"file_name":"src\\main.rs","byte_start":717,"byte_end":921,"line_start":22,"line_end":26,"column_start":1,"column_end":3}},{"value":"*\n 使用外部包：\n为了在项目中使用 rand，在 Cargo.toml 中加入了如下行：\n文件名: Cargo.toml\n[dependencies]\nrand = \"0.5.5\"\n */","span":{"file_name":"src\\main.rs","byte_start":923,"byte_end":1074,"line_start":28,"line_end":34,"column_start":1,"column_end":4}},{"value":"*\n注意标准库（std）对于你的包来说也是外部 crate。\n因为标准库随 Rust 语言一同分发，无需修改 Cargo.toml 来引入 std，\n不过需要通过 use 将标准库中定义的项引入项目包的作用域中来引用它们，比如 HashMap：\nuse std::collections::HashMap;\n*/","span":{"file_name":"src\\main.rs","byte_start":1076,"byte_end":1382,"line_start":36,"line_end":41,"column_start":1,"column_end":3}}]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":557,"byte_end":562,"line_start":14,"line_end":14,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":4}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":564,"byte_end":569,"line_start":14,"line_end":14,"column_start":20,"column_end":25},"ref_id":{"krate":0,"index":3}},{"kind":"Function","span":{"file_name":"src\\main.rs","byte_start":633,"byte_end":641,"line_start":17,"line_end":17,"column_start":21,"column_end":29},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":621,"byte_end":631,"line_start":17,"line_end":17,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":4}},{"kind":"Function","span":{"file_name":"src\\main.rs","byte_start":665,"byte_end":673,"line_start":18,"line_end":18,"column_start":21,"column_end":29},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":653,"byte_end":663,"line_start":18,"line_end":18,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":4}},{"kind":"Function","span":{"file_name":"src\\main.rs","byte_start":697,"byte_end":705,"line_start":19,"line_end":19,"column_start":21,"column_end":29},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":685,"byte_end":695,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":4}},{"kind":"Function","span":{"file_name":"src\\main.rs","byte_start":1418,"byte_end":1431,"line_start":43,"line_end":43,"column_start":24,"column_end":37},"ref_id":{"krate":0,"index":10}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":1399,"byte_end":1416,"line_start":43,"line_end":43,"column_start":5,"column_end":22},"ref_id":{"krate":0,"index":6}},{"kind":"Function","span":{"file_name":"src\\main.rs","byte_start":1470,"byte_end":1478,"line_start":44,"line_end":44,"column_start":36,"column_end":44},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":1439,"byte_end":1456,"line_start":44,"line_end":44,"column_start":5,"column_end":22},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"src\\main.rs","byte_start":1458,"byte_end":1468,"line_start":44,"line_end":44,"column_start":24,"column_end":34},"ref_id":{"krate":0,"index":4}}],"macro_refs":[],"relations":[]}